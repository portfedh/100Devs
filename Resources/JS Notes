
100Devs JavaScript Notes
------------------------

** Review closures 

** Review recurssion


Print to console:

    console.log("Hello from JavaScript!");

        "This is\na multiline string".



Alert in window:

    alert("Hello from JavaScript!");

        Stops program execution.



Print data type

    let newVariable = 'Playing around with typeof.';

    console.log(typeof newVariable);



Comments:

    /* Multi Line Comment */

    // A one line comment



Declare variables (use camelCase):

    let x = 10; (Block scope, )

    var x = 10;

    const x = 10; (Block scope)

        // Const needs to be declared with a value at start



Block code:

    Part of a program delimited by {}

    Example:

        let num1 = 0;
        {
          num1 = 1; // OK : num1 is declared in the parent block
          const num2 = 0;
        }
        console.log(num1); // OK : num1 is declared in the current block
        console.log(num2); // Error! num2 is not visible here


        Increment a variable (two ways)

            x += 1;

            x++;


Type conversion:

    let x = Number("5");

    let x = String("5");


Arithmetic

    let x = 10;

    x = x + 5;  // Alternative 1
        x == 15

    x += 5;  // Alternative 2
        x == 15

    x++;  // Only increases or decreases count by 1
        x == 11

    // Same with other arithmetic opperators ( -, *, /)



String concatenation:

    let name = 'Leon';

    console.log('My fiend's name is: ' + name);


String interpolation

    // Alternative way of string concatenation
    // Uses backticks

    let myName = 'Pablo';
    let myCity = 'London';

    console.log(`My name is ${myName}. My favorite city is ${myCity}.`)




Get input from user:

    const name = prompt("Enter your first name:");



If Statement:

    if (condition a) {

      // Code to run when the condition a is met

    } else if (condition b){

      // Code to run when the condition b is met

    } else {

      // Code to run when the conditions are false

    }


If Statement with AND / OR / NOT operator

    if ( conditionA && conditionB) {

      // Code to run when conditions are is met

      // || for OR conditional

      // !conditionA for NOT

    }



Ternary Operator

    condition ? expressionIfTrue : expressionIfFalse

    let x = 10;

    let y = x > 5 ? "greater than 5" : "less than or equal to 5";

    console.log(y);




Switch Statement:

    Only relevant code gets executed

    Same as if statement

    Example:
        const weather = prompt("Question Here");
        switch (weather) {
          case "sunny":
            console.log("Weather is sunny");
            break;
          case "windy":
            console.log("Weather is windy");
          default:
            console.log("Invlid answer");
        }


While Loop:

    let number = 1;
    while (number <= 5) {
      console.log(number);
      number++;
    }

For loop:

    let number;
    for (number = 1; number <= 5; number++) {
      console.log(number);
    }

    for (initialization; condition; final expression) {
      // code to run while the condition is true
    }



Functions
    
    function sayHello(name) {

      return "Hello" + name;

    }
    const hello = sayHello();

    console.log(hello);



Anonymous functions (TODO)

    const hello = function(name) {

      const message = `Hello, ${name}!`;

      return message;

    };

    const myFunc = function(param1, param2, ...) {

      // Statements using param1, param2, ...

    };



Arrow functions (TODO)

    const hello = (name) => {

      const message = `Hello, ${name}!`;

      return message;

    };

    const myFunc = (param1, param2, ...) => {

        // Statements using param1, param2, ...
    };



Search for an element by it's id and execute function when clicked:

    document.getElementById('purple').onclick = purpleFunction



Search for an element by it's id and execute function when clicked:

    document.querySelector('#submit').addEventListener('click', runFunction)



Search for an element by it's class and execute function when clicked:

    const myElements = document.querySelectorAll('.myClass');

    myElements.forEach(element => {element.addEventListener('click', runFunction);});



Hide the id selected (delete it from the DOM):

    document.querySelector('#claire').style.display = 'none';



Read the curren value of id and assign it to a variable:

    const goal = document.querySelector('#myGoal').value;



Write text in element by it's id. (Two alternative ways):

    document.querySelector('#goalOutput').innerText = intro + ' ' + goal;

    document.querySelector('#goalOutput').innerText = `${intro} ${goal}`



Change the body background color and the text color:

    document.querySelector('body').style.backgroundColor = 'rgba(0,253,81,1)'
    
    document.querySelector('body').style.color = 'white'



Get text and then pass it to a voice synthesizer:

  document.querySelector('#placeToYell').innerText = yellText

  let yellThis = new SpeechSynthesisUtterance(yellText);

  synth.speak(yellThis);


