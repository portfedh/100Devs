Flexbox Tutorial


https://css-tricks.com/snippets/css/a-guide-to-flexbox/


A more efficient way to distribute space for items in a container.

The container can alter its width/height to fill the available space. 

The layout is direction-agnostic.

Most appropriate for small scale layouts.

For large scale layouts use Grid layout. 


Flexbox Properties

    Container

        .container {

            display: flex; /* or inline-flex */


            flex-direction: row | row-reverse | column | column-reverse;

                /* row: left to right */

                /* column: top to bottom */

            
            flex-wrap: nowrap | wrap | wrap-reverse;

                /* nowrap (default): all flex items will be on one line */

                /* wrap: flex items will wrap onto multiple lines, from top to bottom. */

                /* wrap-reverse: flex items will wrao on multiple lines from bottom to top */


            flex-flow: column wrap;

                /* shorthand that uses flex-direction and flex-wrap */


            justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly | start | end | left | right ... + safe | unsafe;

                /* Space arround is like margin. It adds double on the middle items */

                /* Flex start, Flex end and center are the only ones supported by all browsers */

                /* Safe means it cant be pushed offscreen */


            align-items: stretch | flex-start | flex-end | center | baseline | first baseline | last baseline | start | end | self-start | self-end + ... safe | unsafe;

                /* Strech: Fill the container width/height */

                /* Felx-start: Placed at the start (top) */

                /* Felx-end: Placed at the end (bottom) */

                /* Center: Centered at cross axis */

                /* Baseline: Aligne so baselines align (text is aligned) */

            align-content: flex-start | flex-end | center | space-between | space-around | space-evenly | stretch | start | end | baseline | first baseline | last baseline + ... safe | unsafe;

                /* Similar to align items */


              gap: 10px;
              gap: 10px 20px; /* row-gap column gap */
              row-gap: 10px;
              column-gap: 20px;
                /* Space between flex items */
        }


    Items

        .item{
            order: 5; /* default is 0 */

            flex-grow: 4; /* default 0 */

            flex-shrink: 3; /* default 1 */

            flex-basis:  | auto; /* default auto */

            flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]

            align-self: auto | flex-start | flex-end | center | baseline | stretch;
        }



Flexbox Froggy:

    #pond {
      display: flex; /* starts flexbox */

    flex-direction: column;
        /* Options: row, column, row-reverse, column-reverse */

    justify-content: flex-start;
        /* flex-start, flex-end, space-between, space-arround, space evenly */

    align-items: flex-start;
        /* flex-start, flex-end, center, baseline, strec */




    }