Learn to code Advanced HTML & CSS
---------------------------------

https://learn.shayhowe.com/advanced-html-css/

Chapter 1: Performance & Organization
--------------------------------------

Website performance is important

Strategy & Structure
    
    Style Architecture

        Separate styles based on intent

            Create directories for common base styles

            # Base
              – normalize.css
              – layout.css
              – typography.css

            # Components
              – alerts.css
              – buttons.css
              – forms.css
              – list.css
              – nav.css
              – tables.css

            # Modules
              – aside.css
              – footer.css
              – header.css

            There are any page specific styles
            The styles are determined by business needs.
            There are modules for components & business logic.

        Object Oriented CSS

            An oranizational model.

            Separate structure from skin
                Abstracting the layout of an element from the theme of the website.

            Separate content from container
                Removing the dependency of parent elements.
                Inherit default styles and extend with classes.

            - Build a component library.
            - Stay flexible.
            - Utilizing a grid.

        Scalable & Modular Architecture for CSS

            An alternative organizational model.

            Break styles into core categories:

                Base: Core elements
                Layout: Sizing and gris styles
                Module: Syles targeting indicidual parts of page
                State: Styles us to overide other styles
                Theme: Look and feel of modules


        Choosing a methodology

            Generaly a mixture works well. 


        Performance Driven Selectors

            Keep selectors as short as possible

            Decrease specificity when possible


        Favor Classes

            Selectors are rendered right to left

            Stay away from ID selectors when possible

                Dont allow repetition


        Reusable code

            Reuse styles as much as posible.

            You can use several classes with commas

            You can also create a class with classes inside


        Minify & compress files

            Use gzip compression for HTML, CSS, JS

            set an image dimension in HTML

        Reduce HTTP Requests

            Combine similar files

            CSS should load at the beggining

            Javascript should load at the end.

            Image sprites

            Image Data URI

            Cache common files.

                Images, videos usualy for 1 month

                HTML, CSS, JavaScript for 1 year



